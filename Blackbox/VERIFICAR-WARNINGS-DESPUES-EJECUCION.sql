-- =====================================================
-- VERIFICACI√ìN POST-EJECUCI√ìN DE WARNINGS
-- =====================================================
-- Ejecutar despu√©s de aplicar el SQL manual
-- Confirma que todos los warnings fueron eliminados
-- =====================================================

-- Verificar pol√≠ticas m√∫ltiples eliminadas
WITH policy_counts AS (
    SELECT
        tablename,
        cmd,
        COUNT(*) as policy_count
    FROM pg_policies
    WHERE schemaname = 'public'
    GROUP BY tablename, cmd
)
SELECT
    'üîç POL√çTICAS M√öLTIPLES' as verificacion,
    tablename,
    cmd,
    policy_count,
    CASE
        WHEN policy_count > 1 THEN '‚ùå A√öN HAY DUPLICADAS - REVISAR'
        WHEN policy_count = 1 THEN '‚úÖ CONSOLIDADA CORRECTAMENTE'
        ELSE '‚ö†Ô∏è SIN POL√çTICAS'
    END as status
FROM policy_counts
WHERE tablename IN ('favorites', 'property_inquiries', 'users')
ORDER BY tablename, cmd;

-- Verificar √≠ndices duplicados eliminados
WITH index_counts AS (
    SELECT
        tablename,
        indexdef,
        COUNT(*) as index_count,
        array_agg(indexname) as index_names
    FROM pg_indexes
    WHERE schemaname = 'public'
    GROUP BY tablename, indexdef
)
SELECT
    'üîç √çNDICES DUPLICADOS' as verificacion,
    tablename,
    index_count,
    index_names,
    CASE
        WHEN index_count > 1 THEN '‚ùå A√öN HAY DUPLICADOS - REVISAR'
        WHEN index_count = 1 THEN '‚úÖ OPTIMIZADO'
        ELSE '‚ö†Ô∏è SIN √çNDICES'
    END as status
FROM index_counts
WHERE tablename IN ('properties', 'users')
ORDER BY tablename;

-- Verificar funcionalidad b√°sica
SELECT
    'üîç FUNCIONALIDAD B√ÅSICA' as verificacion,
    'users' as tabla,
    COUNT(*) as registros,
    CASE
        WHEN COUNT(*) > 0 THEN '‚úÖ TABLA ACCESIBLE'
        ELSE '‚ùå PROBLEMA DE ACCESO'
    END as status
FROM public.users;

-- Conteo final de warnings
WITH warnings_check AS (
    SELECT
        'multiple_permissive_policies' as tipo,
        COUNT(*) as cantidad
    FROM (
        SELECT tablename, cmd, COUNT(*) as cnt
        FROM pg_policies
        WHERE schemaname = 'public'
        GROUP BY tablename, cmd
        HAVING COUNT(*) > 1
    ) multiple_policies

    UNION ALL

    SELECT
        'duplicate_index' as tipo,
        COUNT(*) as cantidad
    FROM (
        SELECT tablename, indexdef, COUNT(*) as cnt
        FROM pg_indexes
        WHERE schemaname = 'public'
        GROUP BY tablename, indexdef
        HAVING COUNT(*) > 1
    ) duplicate_indexes
)
SELECT
    'üìä RESUMEN FINAL' as verificacion,
    tipo,
    cantidad,
    CASE
        WHEN tipo = 'multiple_permissive_policies' AND cantidad = 0 THEN 'üéâ SIN WARNINGS DE POL√çTICAS'
        WHEN tipo = 'multiple_permissive_policies' AND cantidad > 0 THEN '‚ö†Ô∏è A√öN HAY WARNINGS DE POL√çTICAS'
        WHEN tipo = 'duplicate_index' AND cantidad = 0 THEN 'üéâ SIN √çNDICES DUPLICADOS'
        WHEN tipo = 'duplicate_index' AND cantidad > 0 THEN '‚ö†Ô∏è A√öN HAY √çNDICES DUPLICADOS'
    END as status
FROM warnings_check;

-- Test de rendimiento b√°sico
SELECT
    '‚ö° TEST DE RENDIMIENTO' as verificacion,
    'Consulta b√°sica users' as prueba,
    CASE
        WHEN COUNT(*) > 0 THEN '‚úÖ RENDIMIENTO OK'
        ELSE '‚ùå PROBLEMA DE RENDIMIENTO'
    END as status
FROM public.users
WHERE id IS NOT NULL
LIMIT 1;
