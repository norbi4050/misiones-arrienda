-- ============================================================================
-- DIAGN√ìSTICO ULTRA SIMPLE: Problema "Usuario" en Mensajes
-- Fecha: Enero 2025
-- Esquema confirmado: User.name y User.companyName (ambos en tabla User)
-- ============================================================================

-- ‚ö†Ô∏è EJECUTAR QUERIES UNA POR UNA

-- ============================================================================
-- QUERY 1: Ver todos los usuarios en conversaciones
-- ============================================================================

SELECT 
  u.id,
  u.email,
  u.name,
  u."companyName",
  COALESCE(u.name, u."companyName", split_part(u.email, '@', 1), 'Usuario') as mostrara
FROM "User" u
WHERE EXISTS (
  SELECT 1 FROM "UserProfile" up
  INNER JOIN "Conversation" c ON c."aId" = up.id OR c."bId" = up.id
  WHERE up."userId" = u.id
)
LIMIT 20;


-- ============================================================================
-- QUERY 2: Contar usuarios problem√°ticos
-- ============================================================================

SELECT 
  COUNT(*) as usuarios_con_problema
FROM "User" u
WHERE EXISTS (
  SELECT 1 FROM "UserProfile" up
  INNER JOIN "Conversation" c ON c."aId" = up.id OR c."bId" = up.id
  WHERE up."userId" = u.id
)
AND (u.name IS NULL OR u.name = '')
AND (u."companyName" IS NULL OR u."companyName" = '');


-- ============================================================================
-- QUERY 3: Listar usuarios problem√°ticos
-- ============================================================================

SELECT 
  u.email,
  u.name,
  u."companyName",
  'üî¥ Mostrar√°: Usuario' as problema
FROM "User" u
WHERE EXISTS (
  SELECT 1 FROM "UserProfile" up
  INNER JOIN "Conversation" c ON c."aId" = up.id OR c."bId" = up.id
  WHERE up."userId" = u.id
)
AND (u.name IS NULL OR u.name = '')
AND (u."companyName" IS NULL OR u."companyName" = '');


-- ============================================================================
-- QUERY 4: Buscar usuario espec√≠fico
-- ============================================================================
-- Reemplaza 'norbi4050@gmail.com' con el email que quieras buscar

SELECT 
  u.id,
  u.email,
  u.name,
  u."companyName",
  CASE 
    WHEN u.name IS NOT NULL AND u.name != '' THEN '‚úÖ Mostrar√°: ' || u.name
    WHEN u."companyName" IS NOT NULL AND u."companyName" != '' THEN '‚úÖ Mostrar√°: ' || u."companyName"
    ELSE 'üî¥ Mostrar√°: Usuario'
  END as resultado
FROM "User" u
WHERE u.email = 'norbi4050@gmail.com';  -- ‚¨ÖÔ∏è CAMBIAR EMAIL AQU√ç


-- ============================================================================
-- HALLAZGO CR√çTICO DESCUBIERTO
-- ============================================================================

/*
üö® PROBLEMA ENCONTRADO EN EL C√ìDIGO:

El archivo src/app/api/messages/threads/route.ts (l√≠neas 150-165) busca:
  - UserProfile.companyName ‚ùå (NO EXISTE)
  - UserProfile.full_name ‚ùå (NO EXISTE)

Pero seg√∫n el esquema real de la base de datos:
  - User.companyName ‚úÖ (EXISTE)
  - User.name ‚úÖ (EXISTE)

CONCLUSI√ìN:
El c√≥digo TypeScript est√° buscando companyName en la tabla INCORRECTA.
Deber√≠a buscar en User, no en UserProfile.

SOLUCI√ìN NECESARIA:
Modificar src/app/api/messages/threads/route.ts para que consulte:
  - User.companyName (en lugar de UserProfile.companyName)
  - User.name (ya lo hace correctamente)

IMPACTO:
- Todos los usuarios con companyName poblado NO se est√°n mostrando
- El sistema siempre cae al fallback "Usuario"
- Esto afecta especialmente a inmobiliarias

ARCHIVOS A REVISAR:
1. src/app/api/messages/threads/route.ts (l√≠neas 150-165)
2. src/lib/messages/display-name-helper.ts (verificar interfaz UserProfileData)

PR√ìXIMOS PASOS:
1. Confirmar con estas queries qu√© usuarios tienen companyName
2. Actualizar el c√≥digo TypeScript para buscar en User.companyName
3. Re-testear el sistema de mensajes
*/
